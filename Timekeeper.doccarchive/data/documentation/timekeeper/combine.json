{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For now, we just covered how to measure timings in an imperative way. If you are using Appleâ€™s Combine framework, using Timekeeper becomes even more fun with the convenience methods it defines on the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/combine\/publisher"},{"type":"text","text":" type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Consider the following "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/combine\/future"},{"type":"text","text":" publisher, which emits "},{"type":"codeVoice","code":"\"Hello World!\""},{"type":"text","text":" after one second and then succeeds."}]},{"type":"codeListing","syntax":"swift","code":["let request = Future<String, Error> { promise in","    DispatchQueue.global().asyncAfter(deadline: .now() + 1) {","        promise(.success(\"Hello World!\"))","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to measure the duration of the "},{"type":"codeVoice","code":"request"},{"type":"text","text":" from subscription start to completion, you can use the "},{"type":"codeVoice","code":"measure(_:stopOnCompletion:printOnStop:onStop:)"},{"type":"text","text":" helper."}]},{"type":"codeListing","syntax":"swift","code":["request.measure(\"measurement\").sink(...).store(in: &cancellables)"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/timekeeper\/combine"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Timekeeper\/documentation\/Timekeeper\/Combine","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to measure the duration of one or a sequence of Combine publishers."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Time Combine Operations","role":"collectionGroup","modules":[{"name":"Timekeeper"}]},"hierarchy":{"paths":[["doc:\/\/Timekeeper\/documentation\/Timekeeper"]]},"seeAlsoSections":[{"title":"Documentation","identifiers":["doc:\/\/Timekeeper\/documentation\/Timekeeper\/Advanced"],"generated":true}],"references":{"doc://Timekeeper/documentation/Timekeeper":{"role":"collection","title":"Timekeeper","abstract":[{"type":"text","text":"Timekeeper is an easy-to-use timing library written in Swift, with support for iOS, tvOS, watchOS and macOS."}],"identifier":"doc:\/\/Timekeeper\/documentation\/Timekeeper","kind":"symbol","type":"topic","url":"\/documentation\/timekeeper"},"https://developer.apple.com/documentation/combine/future":{"title":"Future","titleInlineContent":[{"type":"text","text":"Future"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/future","url":"https:\/\/developer.apple.com\/documentation\/combine\/future"},"https://developer.apple.com/documentation/combine/publisher":{"title":"Publisher","titleInlineContent":[{"type":"codeVoice","code":"Publisher"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/publisher","url":"https:\/\/developer.apple.com\/documentation\/combine\/publisher"},"doc://Timekeeper/documentation/Timekeeper/Advanced":{"role":"collectionGroup","title":"Working with Recorded Timings","abstract":[{"type":"text","text":"Learn how to get timing data for each lap, access raw timings and convenience properties."}],"identifier":"doc:\/\/Timekeeper\/documentation\/Timekeeper\/Advanced","kind":"article","type":"topic","url":"\/documentation\/timekeeper\/advanced"}}}